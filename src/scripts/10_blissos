#!/bin/bash
# shellcheck disable=SC2086,SC2001,SC2154,SC1091
set -e

# grub-mkconfig helper script.
# Copyright (C) 2006,2007,2008,2009  Free Software Foundation, Inc.
#
# GRUB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# GRUB is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GRUB.  If not, see <http://www.gnu.org/licenses/>.

. "$pkgdatadir/grub-mkconfig_lib"
. /etc/default/grub

export TEXTDOMAIN=grub
export TEXTDOMAINDIR="${datarootdir}/locale"

CLASS="--class android --class os"
OS="Android"
TITLE="BlissOS $(grep 'ro.bliss.version=' /system/build.prop | awk -F'=' '{print $2}')"

ADVANCED_ARGS=(
	"DEBUG=2 androidboot.enable_console=1"
	"nomodeset"
)

RECOVERY_ARGS=(
	"androidboot.pixel_format=RGBX_8888"
	"androidboot.pixel_format=ABGR_8888"
	"androidboot.pixel_format=ARGB_8888"
	"androidboot.pixel_format=BGRA_8888"
	"androidboot.pixel_format=RGBA_8888"
)

android_entry() {
	local slot=$1 \
		mode=$2

	shift 2
	local extra_args=$* title

	title="$TITLE - Slot ${slot^}"

	case "$mode" in
	recovery) title="$title - Recovery Mode" ;;
	*) ;;
	esac

	title=$title${extra_args:+ - $extra_args}

	echo "menuentry '$(echo "$title" | grub_quote)' ${CLASS} \$menuentry_id_option '$OS-${TITLE// /_}-_$slot${extra_args:+-${extra_args// /_}}' {"

	save_default_entry | grub_add_tab

	# Use ELILO's generic "efifb" when it's known to be available.
	# FIXME: We need an interface to select vesafb in case efifb can't be used.
	if [ ! "$GRUB_GFXPAYLOAD_LINUX" ]; then
		echo "	load_video"
		grep -qx "CONFIG_FB_EFI=y" "${config}" 2>/dev/null &&
			grep -qx "CONFIG_VT_HW_CONSOLE_BINDING=y" "${config}" 2>/dev/null &&
			echo "	set gfxpayload=keep"

	else
		[ "$GRUB_GFXPAYLOAD_LINUX" = text ] ||
			echo "	load_video"
		echo "	set gfxpayload=$GRUB_GFXPAYLOAD_LINUX"
	fi

	echo "	insmod gzio"
	echo "$disk" | sed "s/^/$grub_tab/gm"
	echo "	linux $SRC/kernel_$slot $GRUB_CMDLINE_ANDROID $extra_args root=/dev/ram0 SRC=$SRC androidboot.slot_suffix=_$slot"
	echo "	initrd $SRC/initrd_$slot.img"
	echo "}
"
}

disk="$(prepare_grub_to_access_device "$GRUB_DEVICE")"

unset IFS

# Extra indentation to add to menu entries in a submenu. We're not in a submenu
# yet, so it's empty. In a submenu it will be equal to '\t' (one tab).
ROOT_DEVICE=$GRUB_DEVICE
ROOT_UUID=$(${grub_probe} --device "$GRUB_DEVICE" --target=fs_uuid 2>/dev/null)

echo $ROOT_UUID

[ "$ROOT_UUID" ] &&
	ROOT_DEVICE="UUID=$ROOT_UUID"

GRUB_CMDLINE_ANDROID="$GRUB_CMDLINE_ANDROID ROOT=$ROOT_DEVICE"

entry() { android_entry "$@" | sed "s/^/$submenu_indentation	/gm"; }

submenu_indentation=""
for slot in a b; do
	entry $slot default
done

echo "submenu '$(echo "Advanced options for $TITLE" | grub_quote)' \$menuentry_id_option '$OS-${TITLE// /_}-Advanced_A' {"

submenu_indentation=$grub_tab
for arg in "${ADVANCED_ARGS[@]}"; do
	entry a default $arg
done

echo "${grub_tab}submenu '$(echo "Advanced options for $TITLE" | grub_quote) - Slot B' \$menuentry_id_option '$OS-${TITLE// /_}-Advanced_B' {"

submenu_indentation=$grub_tab$grub_tab
for arg in "${ADVANCED_ARGS[@]}"; do
	entry b default $arg
done

echo "${grub_tab}}"

echo "}"

GRUB_CMDLINE_ANDROID="$GRUB_CMDLINE_ANDROID RCVRY=1 androidboot.mode=recovery androidboot.force_normal_boot=0"

echo "submenu '$(echo "Recovery modes for $TITLE" | grub_quote)' \$menuentry_id_option '$OS-${TITLE// /_}-Recovery_A' {"

submenu_indentation=$grub_tab
for arg in "${RECOVERY_ARGS[@]}"; do
	entry a recovery $arg
done

echo "${grub_tab}submenu '$(echo "Recovery modes for $TITLE" | grub_quote) - Slot B' \$menuentry_id_option '$OS-${TITLE// /_}-Recovery_B' {"

submenu_indentation=$grub_tab$grub_tab
for arg in "${RECOVERY_ARGS[@]}"; do
	entry b recovery $arg
done

echo "${grub_tab}}"

echo "}"
